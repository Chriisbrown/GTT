-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_latency_0_0 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    data_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_2_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_3_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_4_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_5_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_6_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    data_7_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of dense_latency_0_0 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1BCE : STD_LOGIC_VECTOR (12 downto 0) := "1101111001110";
    constant ap_const_lv16_1160 : STD_LOGIC_VECTOR (15 downto 0) := "0001000101100000";

    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp2_fu_158_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp2_reg_243 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_164_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_188_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_253 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_94_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_94_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_102_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_102_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_110_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_110_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_118_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_118_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_126_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_126_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_134_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_134_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_142_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_142_ap_ce : STD_LOGIC;
    signal grp_product_2_fu_150_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_product_2_fu_150_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp7_fu_176_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_182_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_170_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp1_fu_194_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal res_V_write_assign_fu_198_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal data_0_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_1_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_2_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_3_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_4_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_5_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_6_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal data_7_V_read_int_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component product_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (13 downto 0);
        w_V : IN STD_LOGIC_VECTOR (12 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_product_2_fu_94 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_0_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_94_ap_return,
        ap_ce => grp_product_2_fu_94_ap_ce);

    grp_product_2_fu_102 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_1_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_102_ap_return,
        ap_ce => grp_product_2_fu_102_ap_ce);

    grp_product_2_fu_110 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_2_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_110_ap_return,
        ap_ce => grp_product_2_fu_110_ap_ce);

    grp_product_2_fu_118 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_3_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_118_ap_return,
        ap_ce => grp_product_2_fu_118_ap_ce);

    grp_product_2_fu_126 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_4_V_read_int_reg,
        w_V => ap_const_lv13_1BCE,
        ap_return => grp_product_2_fu_126_ap_return,
        ap_ce => grp_product_2_fu_126_ap_ce);

    grp_product_2_fu_134 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_5_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_134_ap_return,
        ap_ce => grp_product_2_fu_134_ap_ce);

    grp_product_2_fu_142 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_6_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_142_ap_return,
        ap_ce => grp_product_2_fu_142_ap_ce);

    grp_product_2_fu_150 : component product_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        a_V => data_7_V_read_int_reg,
        w_V => ap_const_lv13_0,
        ap_return => grp_product_2_fu_150_ap_return,
        ap_ce => grp_product_2_fu_150_ap_ce);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= res_V_write_assign_fu_198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                data_0_V_read_int_reg <= data_0_V_read;
                data_1_V_read_int_reg <= data_1_V_read;
                data_2_V_read_int_reg <= data_2_V_read;
                data_3_V_read_int_reg <= data_3_V_read;
                data_4_V_read_int_reg <= data_4_V_read;
                data_5_V_read_int_reg <= data_5_V_read;
                data_6_V_read_int_reg <= data_6_V_read;
                data_7_V_read_int_reg <= data_7_V_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                tmp2_reg_243 <= tmp2_fu_158_p2;
                tmp3_reg_248 <= tmp3_fu_164_p2;
                tmp4_reg_253 <= tmp4_fu_188_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(res_V_write_assign_fu_198_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= res_V_write_assign_fu_198_p2;
        end if; 
    end process;


    grp_product_2_fu_102_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_102_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_102_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_110_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_110_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_110_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_118_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_118_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_118_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_126_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_126_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_126_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_134_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_134_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_134_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_142_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_142_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_142_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_150_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_150_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_150_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_product_2_fu_94_ap_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_product_2_fu_94_ap_ce <= ap_const_logic_1;
        else 
            grp_product_2_fu_94_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    res_V_write_assign_fu_198_p2 <= std_logic_vector(unsigned(tmp4_reg_253) + unsigned(tmp1_fu_194_p2));
    tmp1_fu_194_p2 <= std_logic_vector(unsigned(tmp3_reg_248) + unsigned(tmp2_reg_243));
    tmp2_fu_158_p2 <= std_logic_vector(unsigned(grp_product_2_fu_94_ap_return) + unsigned(grp_product_2_fu_102_ap_return));
    tmp3_fu_164_p2 <= std_logic_vector(unsigned(grp_product_2_fu_110_ap_return) + unsigned(grp_product_2_fu_118_ap_return));
    tmp4_fu_188_p2 <= std_logic_vector(unsigned(tmp6_fu_182_p2) + unsigned(tmp5_fu_170_p2));
    tmp5_fu_170_p2 <= std_logic_vector(unsigned(grp_product_2_fu_126_ap_return) + unsigned(grp_product_2_fu_134_ap_return));
    tmp6_fu_182_p2 <= std_logic_vector(unsigned(tmp7_fu_176_p2) + unsigned(grp_product_2_fu_142_ap_return));
    tmp7_fu_176_p2 <= std_logic_vector(unsigned(grp_product_2_fu_150_ap_return) + unsigned(ap_const_lv16_1160));
end behav;
